swagger: "2.0"
info:
  description: "This is a interface responsible for deal with store, orders and payments"
  version: "1.0.0"
  title: "Invillia Store"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "roandrad@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v1"
tags:
- name: "Store"
  description: "Everything about stores"
- name: "Order"
  description: "Creation and refund of orders with its items"
- name: "Payment"
  description: "Payment of an order"
schemes:
- "https"
- "http"
paths:
  /stores:
    get:
      tags: 
      - Store
      summary: Retrive the orders based on its parameters
      consumes: 
      - application/json
      produces: 
      - application/json
      operationId: findStores
      parameters: 
      - in: query
        name: name
        type: string
      - in: query
        name: neighborhood
        type: string
      - in: query
        name: city
        type: string
      - in: query
        name: state
        type: string
        minLength: 2
        maxLength: 2
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/StoreTO'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/MessageTO'
    post:
      tags:
      - Store
      summary: Saves an order in database
      consumes: 
      - application/json
      produces: 
      - application/json
      operationId: saveStore
      parameters: 
      - in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/StoreTO'
      responses:
        201:
          description: Created
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/MessageTO'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/MessageTO'
  /stores/{id}:
    put:
      tags:
      - Store
      summary: Updates the store's data
      consumes: 
      - application/json
      produces: 
      - application/json
      operationId: updateStore
      parameters:
      - in: path
        name: id
        required: true
        type: integer
        format: int64
      - in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/StoreTO'      
      responses:
        200:
          description: OK
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/MessageTO'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/MessageTO'
  /orders:
    post:
      tags: 
      - Order
      summary: Creates an order 
      consumes: 
      - application/json
      produces:
      - application/json
      operationId: saveOrder
      parameters: 
      - in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/OrderTO'
      responses:
        201:
          description: Created
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/MessageTO'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/MessageTO'
    get:
      tags:
      - Order
      summary: Retrives the orders by parameters 
      consumes: 
      - application/json
      produces: 
      - application/json
      operationId: findOrders
      parameters: 
      - in: query
        name: neighborhood
        type: string
      - in: query
        name: city
        type: string
      - in: query
        name: state
        type: string
        minLength: 2
        maxLength: 2
      - in: query
        name: confirmationDate
        type: string
        format: date
      - in: query
        name: status
        type: string
      - in: query
        name: itemDescription
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderTO'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/MessageTO'
  /orders/refunds/{id}:
    put:
      tags: 
      - Order
      summary: Makes the refund for some order
      operationId: doOrderRefund
      consumes: 
      - application/json
      produces: 
      - application/json
      parameters: 
      - in: path
        name: id
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        500:
          description: Internal error!
          schema:
            $ref: '#/definitions/MessageTO'
  /orders/items/refunds/{id}:
    put:
      tags: 
      - Order
      summary: Makes the refund of the Order item
      produces: 
      - application/json
      operationId: doOrderItemRefund
      parameters: 
      - in: path
        name: id
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: OK
        500:
          description: Internal error
  /payments:
    post:
      tags: 
      - Payment
      summary: Creates a payment
      consumes: 
      - application/json
      produces: 
      - application/json
      operationId: savePayment
      parameters: 
      - in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/PaymentTO'
      responses:
        201:
          description: Created
        422:
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/MessageTO'
        500:
          description: Internal error
definitions:
  StoreTO:
    type: object
    required: 
    - name
    - address
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      address:
        $ref: '#/definitions/AddressTO'
  AddressTO:
    type: object
    required: 
    - street
    - number
    - neighborhood
    - city
    - state
    properties:
      street:
        type: string
      number:
        type: integer
        minimum: 0
      complement:
        type: string
      neighborhood:
        type: string
      city:
        type: string
      state:
        type: string
        minLength: 2
        maxLength: 2
  OrderTO:
    type: object
    required: 
    - address
    - confirmationDate
    - status
    properties:
      id:
        type: integer
        format: int64
      address:
        $ref: '#/definitions/AddressTO'
      confirmationDate:
        type: string
        format: date
      status:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/OrderItemTO'
        minItems: 1
  OrderItemTO:
    type: object
    required: 
    - description
    - unitPrice
    - quantity
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
      unitPrice:
        type: number
        format: currency
      quantity:
        type: integer
        minimum: 1
  MessageTO:
    type: object
    properties:
      message:
        type: string
  PaymentTO:
    type: object
    properties:
      status:
        type: string
      creditCardNumber:
        type: string
      paymentDate:
        type: string
        format: date
      order:
        $ref: '#/definitions/OrderTO'
